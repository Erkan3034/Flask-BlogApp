if __name__ == '__main__': açıklaması:

Bu satır, dosyanın doğrudan çalıştırılıp çalıştırılmadığını kontrol eder.
Eğer dosya doğrudan çalıştırılıyorsa (örn: python app.py), altındaki kodlar çalışır.
Eğer dosya başka bir dosya tarafından import ediliyorsa, altındaki kodlar çalışmaz.
Bu yapı, projeyi daha düzenli ve kontrollü yönetmemizi sağlar.


=================================JINJA TEMPLATE=============================================

Flask’ta Sayfalar Nasıl Daha Profesyonel Yapılır?

Şu an her sayfayı Python dosyasının içinde HTML olarak yazıyorsak.
Bu küçük projelerde olur ama proje büyüyünce:

Python dosyası karışır.

HTML kodlarını değiştirmek zorlaşır.

Tasarımda değişiklik yapmak çok zaman alır.

Profesyonel bir yapı için HTML dosyaları ayrı olmalı.
Flask bunun için "Jinja2 Template" sistemini kullanır.

Jinja2 Nedir?

HTML şablonları kullanmanı sağlar.

HTML dosyalarını /templates/ klasörüne koyarsın.

Flask sadece bu HTML dosyalarını çağırır.

HTML içinde Python gibi değişkenler ({{ değişken }}) kullanabilirsin.

Proje yapısı şu şekilde olmalı:


/proje_adi
    /static  (css, js, resimler buraya)
    /templates (html dosyaları buraya)
    app.py (Python kodları burada)

Flask dosyandan HTML’i böyle çağırırsın:


from flask import Flask, render_template

app = Flask(__name__)

@app.route('/hakkinda')
def hakkinda():
    return render_template('hakkinda.html')

if __name__ == '__main__':
    app.run(debug=True)
templates/hakkinda.html dosyasının içinde normal HTML yazarız.

Bu sistem sayesinde:

Kodlar temiz olur.

Sayfa eklemek kolay olur.

Tasarım yönetimi basitleşir.

